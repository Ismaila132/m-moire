package sn.pad.controleur;

import sn.pad.entites.*;
import sn.pad.exceptions.JournalierNotFoundException;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import sn.pad.dao.*;
import sn.pad.metier.*;

@RestController
// toutes les requetes sont préfixés par l'URL de base suivante:
//http://localhost:3000/journalierapi/...
@RequestMapping("/journalierapi")
public class JournalierControleur
{
	@Autowired
	private JournalierProcessing journalierProcessing;
	
	@Autowired
	private JournalierDAO journalierDAO;
	
	//http://localhost:3000/journalierapi/journaliers
	@PostMapping("/journaliers")
	public ResponseEntity<Journalier> ajouterJournalier(@RequestBody Journalier journalier)
	{
		Journalier newJournalier = journalierDAO.creerJournalier(journalier);
		return new ResponseEntity<Journalier> (newJournalier,HttpStatus.CREATED);
	}
	
	//http://localhost:3000/journalierapi/journaliers
	@GetMapping("/journaliers")
	public ResponseEntity<List<Journalier>> afficherJournaliers()
	{
		List<Journalier> liste = journalierDAO.listerJournaliers();
		return new ResponseEntity <List<Journalier>> (liste,HttpStatus.OK);
	}
	
	@GetMapping("/journaliers/matricule/{matriculeJournalier}")
	public ResponseEntity<Journalier> trouverUnJournalier(@PathVariable("matriculeJournalier") Integer matriculeJournalier)
	{
		Journalier journalier = journalierDAO.rechercherParIdJournalier(matriculeJournalier);
		return new ResponseEntity<Journalier>(journalier,HttpStatus.OK);
	}
	
	@GetMapping("/journaliers/tel/{telJournalier}")
    public ResponseEntity<Journalier> trouverUnJournalierParTel(@PathVariable("telJournalier") Integer telJournalier) 
	{
        Journalier journalier = journalierDAO.rechercherParTelJournalier(telJournalier);
        return new ResponseEntity<>(journalier, HttpStatus.OK);
    }
	
	// Supprimer un journalier par matricule
    @DeleteMapping("/journaliers/matricule/{matriculeJournalier}")
    public ResponseEntity<Void> supprimerJournalierParId(@PathVariable("matriculeJournalier") Integer matriculeJournalier) {
        journalierDAO.supprimerParIdJournalier(matriculeJournalier);
        return new ResponseEntity<>(HttpStatus.NO_CONTENT);
    }

    // Supprimer un journalier par téléphone
    @DeleteMapping("/journaliers/tel/{telJournalier}")
    public ResponseEntity<Void> supprimerJournalierParTel(@PathVariable("telJournalier") Integer telJournalier) {
        journalierDAO.supprimerParTelJournalier(telJournalier);
        return new ResponseEntity<>(HttpStatus.NO_CONTENT);
    }
    
 // Modifier un journalier
    @PutMapping("/journaliers")
    public ResponseEntity<Journalier> modifierJournalier(@RequestBody Journalier journalier) 
    {
        Journalier existingJournalier = journalierDAO.rechercherParIdJournalier(journalier.getMatriculeJournalier());
        if (existingJournalier == null) {
            throw new JournalierNotFoundException("Journalier non trouvé avec la matricule : " + journalier.getMatriculeJournalier());
        }
        journalierDAO.modifierJournalier(journalier);
        return new ResponseEntity<>(journalier, HttpStatus.OK);
    }
}
